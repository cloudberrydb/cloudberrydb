-- Mixed test for local directory table
-- setup for temp tablespace
! rm -rf '@testtablespace@/local_directory_table_mixed/';
! mkdir -p '@testtablespace@/local_directory_table_mixed/';
DROP TABLESPACE IF EXISTS directory_tblspc;
CREATE TABLESPACE directory_tblspc LOCATION '@testtablespace@/local_directory_table_mixed/';

CREATE EXTENSION IF NOT EXISTS gp_inject_fault;

-- Test create directory table and create directory table
1: BEGIN;
2: BEGIN;
1: CREATE DIRECTORY TABLE dir_table1 TABLESPACE directory_tblspc;
2: CREATE DIRECTORY TABLE dir_table2 TABLESPACE directory_tblspc;
1: COMMIT;
2: COMMIT;

1: COPY BINARY dir_table1 FROM '@abs_srcdir@/data/nation.csv' 'nation1';
2: COPY BINARY dir_table2 FROM '@abs_srcdir@/data/nation.csv' 'nation2';
3: COPY BINARY dir_table1 FROM '@abs_srcdir@/data/nation.csv' 'nation3';
4: COPY BINARY dir_table2 FROM '@abs_srcdir@/data/nation.csv' 'nation4';

-- Test copy binary from the same directory table in parallel session is allowed
1: BEGIN;
2: BEGIN;
1: COPY BINARY dir_table1 FROM '@abs_srcdir@/data/nation.csv' 'nation5';
2: COPY BINARY dir_table1 FROM '@abs_srcdir@/data/nation.csv' 'nation6';
1: COMMIT;
2: COMMIT;

-- Test copy binary from and select directory table
1: BEGIN;
2: BEGIN;
1: COPY BINARY dir_table2 FROM '@abs_srcdir@/data/nation.csv' 'nation5';
2: SELECT relative_path, size, tag, md5 FROM dir_table2 ORDER BY 1;
1: COMMIT;
2: COMMIT;

1: BEGIN;
2: BEGIN;
1: COPY BINARY dir_table2 FROM '@abs_srcdir@/data/nation.csv' 'nation6';
2: SELECT relative_path, size, tag, md5, content FROM directory_table('dir_table2') ORDER BY 1;
1: COMMIT;
2: COMMIT;

-- Test copy binary from and remove_file()
1: BEGIN;
2: BEGIN;
1: COPY BINARY dir_table1 FROM '@abs_srcdir@/data/nation.csv' 'nation7';
2&: SELECT remove_file('dir_table1', 'nation6');
1: COMMIT;
2<:
2: COMMIT;

-- Test select and select
1: BEGIN;
2: BEGIN;
1: SELECT relative_path, size, tag, md5 FROM dir_table1 ORDER BY 1;
2: SELECT relative_path, size, tag, md5, content FROM directory_table('dir_table2') ORDER BY 1;
1: SELECT relative_path, size, tag, md5, content FROM directory_table('dir_table2') ORDER BY 1;
2: SELECT relative_path, size, tag, md5 FROM dir_table1 ORDER BY 1;
2: COMMIT;
1: COMMIT;

-- Test select and remove_file()
1: BEGIN;
2: BEGIN;
1: SELECT gp_inject_fault('directory_table_inject', 'suspend', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1&: SELECT relative_path, size, tag, md5, content FROM directory_table('dir_table1') ORDER BY 1;
2&: SELECT remove_file('dir_table1', 'nation7');
3: SELECT gp_wait_until_triggered_fault('directory_table_inject', 1, dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
3: SELECT gp_inject_fault('directory_table_inject', 'resume', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1<:
1: COMMIT;
2<:
2: COMMIT;

1: SELECT gp_inject_fault('directory_table_inject', 'reset', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;

1: BEGIN;
2: BEGIN;
1: SELECT gp_inject_fault('remove_file_inject', 'suspend', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1&: SELECT remove_file('dir_table1', 'nation5');
2&: SELECT relative_path, size, tag, md5 FROM dir_table1 ORDER BY 1;
3: SELECT gp_wait_until_triggered_fault('remove_file_inject', 1, dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
3: SELECT gp_inject_fault('remove_file_inject', 'resume', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1<:
1: COMMIT;
2<:
2: COMMIT;

1: SELECT gp_inject_fault('remove_file_inject', 'reset', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;

1: BEGIN;
2: BEGIN;
1: SELECT gp_inject_fault('remove_file_inject', 'suspend', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1&: SELECT remove_file('dir_table2', 'nation6');
2&: SELECT relative_path, size, tag, md5, content FROM directory_table('dir_table2') ORDER BY 1;
3: SELECT gp_wait_until_triggered_fault('remove_file_inject', 1, dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
3: SELECT gp_inject_fault('remove_file_inject', 'resume', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1<:
1: COMMIT;
2<:
2: COMMIT;

1: SELECT gp_inject_fault('remove_file_inject', 'reset', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;

1: BEGIN;
2: BEGIN;
1: SELECT gp_inject_fault('directory_table_inject', 'suspend', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1&: SELECT relative_path, size, tag, md5, content FROM directory_table('dir_table2') ORDER BY 1;
2&: SELECT remove_file('dir_table2', 'nation5');
3: SELECT gp_wait_until_triggered_fault('directory_table_inject', 1, dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
3: SELECT gp_inject_fault('directory_table_inject', 'resume', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;
1<:
1: COMMIT;
2<:
2: COMMIT;

1: SELECT gp_inject_fault('directory_table_inject', 'reset', dbid) FROM gp_segment_configuration WHERE role='p' and content >= 0;

-- Test create directory table and drop directory table
1: BEGIN;
2: BEGIN;
1: CREATE DIRECTORY TABLE dir_table3 TABLESPACE directory_tblspc;
2: DROP DIRECTORY TABLE dir_table2;
2: CREATE DIRECTORY TABLE dir_table2 TABLESPACE directory_tblspc;
1: COMMIT;
2: COMMIT;

DROP TABLESPACE directory_tblspc;
DROP DIRECTORY TABLE dir_table1;
DROP DIRECTORY TABLE dir_table2;
DROP DIRECTORY TABLE dir_table3;
! rm -rf '@testtablespace@/local_directory_table_mixed/';
DROP TABLESPACE directory_tblspc;